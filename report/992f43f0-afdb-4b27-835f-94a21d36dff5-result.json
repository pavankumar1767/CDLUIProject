{"name": "Verify Filter well with single log", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 60000ms exceeded.\nCall log:\n  - waiting for locator(\"//span[contains(normalize-space(), 'Skip')]\") to be visible", "trace": "self = <tests.Job.test_TC01_log.TestTC01 object at 0x00000162473E3AD0>, setup = <Page url='https://149.255.39.63/filter'>\nconfig = <class 'utilities.config.config_stage.Config'>\n\n    @allure.title(\"Verify Filter well with single log\")\n    def test_filter_single_log(self, setup, config):\n        page = setup\n        home_page = HomePage(page)\n        login_page = LoginPage(page)\n        filter_page = FilterPage(page)\n        job_page = JobPage(page)\n    \n        login_page.navigate(config.BASE_URL)\n        login_page.enter_username(config.username)\n        login_page.enter_password(config.password)\n        login_page.click_login(\"Sign In\")\n    \n        test_data = TestDataManager.get_test_data()\n        well = test_data[\"wells\"][\"wellname_1\"]\n        log = test_data[\"wells\"][\"log_1\"]\n        Object_list = test_data[\"wells\"][\"objectlist\"]\n    \n        home_page.select_module(\"/jobs\")\n        filter_page.Button(\"Create Job\")\n>       filter_page.Button(\"Skip\")\n\ntests\\Job\\test_TC01_log.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\filter_page.py:121: in Button\n    self.click(element_xpath, f\"{button_text}\")\npages\\base_page.py:30: in click\n    self.page.wait_for_selector(selector)\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\playwright\\sync_api\\_generated.py:8183: in wait_for_selector\n    self._sync(\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\playwright\\_impl\\_page.py:425: in wait_for_selector\n    return await self._main_frame.wait_for_selector(**locals_to_params(locals()))\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\playwright\\_impl\\_frame.py:323: in wait_for_selector\n    await self._channel.send(\"waitForSelector\", locals_to_params(locals()))\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\playwright\\_impl\\_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <playwright._impl._connection.Connection object at 0x000001624A1A8440>, cb = <function Channel.send.<locals>.<lambda> at 0x000001624A2E40E0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Page.wait_for_selector: Timeout 60000ms exceeded.\nE           Call log:\nE             - waiting for locator(\"//span[contains(normalize-space(), 'Skip')]\") to be visible\n\n..\\..\\..\\AppData\\Roaming\\Python\\Python312\\site-packages\\playwright\\_impl\\_connection.py:528: TimeoutError"}, "attachments": [{"name": "Log", "source": "7f4d12c9-5e80-4b7f-8428-8461566355f0-attachment.txt", "type": "text/plain"}, {"name": "Log", "source": "f2e96ec9-c848-4ec4-8162-0c8662e60e81-attachment.txt", "type": "text/plain"}, {"name": "Log", "source": "d6b545a0-a743-4893-bb06-82ae0cd0ad10-attachment.txt", "type": "text/plain"}, {"name": "Log", "source": "5070aec4-67e0-4493-a9b9-9f9bf0dcf9e0-attachment.txt", "type": "text/plain"}, {"name": "Log", "source": "5ea59ef9-f993-46ea-a835-7b9659c0d480-attachment.txt", "type": "text/plain"}, {"name": "Log", "source": "e71f4906-1255-468c-bdc7-2e7be48cd56b-attachment.txt", "type": "text/plain"}, {"name": "Log", "source": "1c76bf5c-6f2d-41ad-a641-563460042365-attachment.txt", "type": "text/plain"}, {"name": "Screenshot", "source": "aa65da41-ed78-42ba-91a5-bcb05086a656-attachment.png", "type": "image/png"}], "start": 1744274849834, "stop": 1744274947206, "uuid": "0c308ad6-4ed5-4dba-a67d-e6a51310a235", "historyId": "e9bb772fa43d80e3a316d08d9df10d88", "testCaseId": "e9bb772fa43d80e3a316d08d9df10d88", "fullName": "tests.Job.test_TC01_log.TestTC01#test_filter_single_log", "labels": [{"name": "suite", "value": "data extraction single log"}, {"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "tests.Job"}, {"name": "subSuite", "value": "TestTC01"}, {"name": "host", "value": "PavanKarri"}, {"name": "thread", "value": "30756-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Job.test_TC01_log"}]}